

1. ModÃ©lisation du projet
a) Diagramme de cas dâ€™utilisation (Use Case)

Le diagramme de cas dâ€™utilisation doit illustrer les interactions entre :

Patient : consultation du dossier, gestion des RDV, accÃ¨s aux centres de santÃ©.

Centre de santÃ© : ajout de consultation, gestion des RDV, accÃ¨s aux dossiers patients.

Administrateur : crÃ©ation et gestion des comptes utilisateurs (patients et centres).

ğŸ‘‰ Objectif : montrer visuellement les fonctionnalitÃ©s principales accessibles selon chaque rÃ´le.

b) Diagramme de classes

Le diagramme de classes doit reprÃ©senter les principales entitÃ©s de lâ€™application et leurs relations :

Patient : id, nom, tÃ©lÃ©phone, contactUrgence, photo.

Consultation : id, date, diagnostic, traitement, ordonnance.

CentreDeSante : id, nom, adresse, tÃ©lÃ©phone, identifiantsConnexion.

RendezVous : id, date, statut, patientId, centreId.

Administrateur : id, nom, identifiantsConnexion.

ğŸ‘‰ Objectif : dÃ©crire la structure logique du systÃ¨me en termes de classes et attributs.

c) ModÃ¨le de donnÃ©es

Le modÃ¨le de donnÃ©es (ou schÃ©ma relationnel) doit reprÃ©senter la base de donnÃ©es sous forme de tables et relations.
Exemple :

Patients (id_patient, nom, tÃ©lÃ©phone, contact_urgence, photo, idVitalia)

Centres (id_centre, nom, adresse, tÃ©lÃ©phone, identifiants)

Consultations (id_consultation, date, diagnostic, traitement, ordonnance, id_patient, id_centre)

RendezVous (id_rdv, date, statut, id_patient, id_centre)

Admins (id_admin, nom, identifiants)

ğŸ‘‰ Objectif : avoir une vision claire de la structure des donnÃ©es stockÃ©es dans lâ€™application.